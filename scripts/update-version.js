#!/usr/bin/env node

/**
 * Version Update Script
 * 
 * This script helps maintain Mermaid version compatibility information.
 * Run this script when updating the validator to work with a new Mermaid version.
 * 
 * Usage: node scripts/update-version.js [new-version] [date]
 * Example: node scripts/update-version.js 12.0.0 2024-11-01
 */

import fs from 'fs';
import { execSync } from 'child_process';

const args = process.argv.slice(2);
const newVersion = args[0];
const newDate = args[1] || new Date().toISOString().split('T')[0];

if (!newVersion) {
  console.log('Usage: node scripts/update-version.js [new-version] [date]');
  console.log('Example: node scripts/update-version.js 12.0.0 2024-11-01');
  process.exit(1);
}

console.log(`üîÑ Updating Mermaid version compatibility to ${newVersion}...`);

// Update package.json
const packageJsonPath = './package.json';
const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf8'));

packageJson.mermaidCompatibility = {
  validatedAgainst: newVersion,
  lastValidated: newDate,
  cliVersion: `@mermaid-js/mermaid-cli@${newVersion}`
};

fs.writeFileSync(packageJsonPath, JSON.stringify(packageJson, null, 2));

// Update version.ts
const versionTsPath = './src/version.ts';
const versionTsContent = `// Mermaid version compatibility information
// This file is automatically generated and should not be edited manually
export const MERMAID_VERSION_INFO = {
  validatedAgainst: "${newVersion}",
  lastValidated: "${newDate}",
  cliVersion: "@mermaid-js/mermaid-cli@${newVersion}"
};
`;

fs.writeFileSync(versionTsPath, versionTsContent);

console.log('‚úÖ Updated package.json');
console.log('‚úÖ Updated src/version.ts');

// Build the project
console.log('üî® Building project...');
try {
  execSync('npm run build', { stdio: 'inherit' });
  console.log('‚úÖ Build successful');
} catch (error) {
  console.error('‚ùå Build failed:', error.message);
  process.exit(1);
}

// Run tests
console.log('üß™ Running tests...');
try {
  execSync('npm test', { stdio: 'inherit' });
  console.log('‚úÖ All tests passed');
} catch (error) {
  console.error('‚ùå Tests failed:', error.message);
  process.exit(1);
}

console.log(`\nüéâ Successfully updated to Mermaid ${newVersion}!`);
console.log('\nüìù Next steps:');
console.log('1. Test against the new Mermaid CLI version');
console.log('2. Update any new diagram types or syntax changes');
console.log('3. Run CLI validation tests: npm run test:cli');
console.log('4. Update documentation if needed');
console.log('5. Commit and tag the new version');
